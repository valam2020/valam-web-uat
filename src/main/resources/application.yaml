#spring:
#    datasource:
#     url: jdbc:mysql://localhost:3306/valam_app?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#     username: root
#     password: root
#    url: jdbc:mysql://bc5fb2d43652ce:6a02ad27@us-cdbr-east-04.cleardb.com/heroku_413ee85f7884979?sslca=cleardb-ca.pem&sslcert=bc5fb2d43652ce-cert.pem&sslkey=bc5fb2d43652ce-key.pem&reconnect=true?createDatabaseIfNotExist=true
#     username: bc5fb2d43652ce
#     password: 6a02ad27
#       
# #spring.jpa.properties.hibernate.jdbc.time_zone = UTC
#
#    jpa:
#        show-sql: true
#        hibernate:
#            ddl-auto: update
#            #naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
#        properties:
#            hibernate:
#                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#
spring:  datasource:     url: jdbc:mysql://valam_uat:valam_uat@us-mm-dca-cc5a76fc66c9.g5.cleardb.net/heroku_uat?sslca=cleardb-ca.pem&sslcert=b138fbf97a65dd-cert.pem&sslkey=b138fbf97a65dd-key.pem&reconnect=true?createDatabaseIfNotExist=true
     username: valam_uat
     password: valam_uat  
     dbcp2:
      initial-size: 7
      max-total: 20
      pool-prepared-statements: true  jpa:    hibernate:      ddl-auto: update
    properties:      hibernate:
      dialect: org.hibernate.dialect.MySQL5InnoDBDialect
      use_sql_comments: true
      format_sql: true
        storage_engine:innodb    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect    show-sql: true
  security:    oauth2:      client:        registration:          google:
            client-id: 763158131226-k4926josgdecm7o6gcfscbq5v8vib65e.apps.googleusercontent.com
            client-secret: vyz-gahvlomwSJGDHizQdHlY
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:             - email
             - profile
          facebook:
            client-id: 1038423279912140
            client-secret: 37100a38fca41027583d8f3f467e5671
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
            scope:
             - email
             - public_profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)      twilio:        account_sid: AC6280b24ba5328f9cc721368ae9e78ae3
        auth_token: 2d2c0b4c77ed855d910150a4f15436b3        trail_number: +16176168604
  mail:
    host: smtp.gmail.com
    username: valammailservice@gmail.com
    password: fhdeskwqdafvwfrm

    properties:
      mail:
       smtp:
        auth: true
        socketFactory: 
           port: 465
           class: javax.net.ssl.SSLSocketFactory
           fallback : false 
    
app:  auth:    token-secret: 926D96C90030DD58429D2751AC1BDBBC    token-expiration-msec: 864000000  oauth2:
  # After successfully authenticating with the OAuth2 Provider,
  # we'll be generating an auth token for the user and sending the token to the
  # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
  # We're not using cookies because they won't work well in mobile clients.    authorized-redirect-uris:    - http://localhost:3000/oauth2/redirect
    - myandroidapp://oauth2/redirect
    - myiosapp://oauth2/redirect
    
logging:
  level:
    org:
      hibernate:
        SQL: TRACE
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
              

             
            
#spring:
#      datasource:
#           url: jdbc:jdbc:h2:file:~/h2/testdb
#           platform: h2
#           username: sa
#           password: 
#           driver-class-name: org.h2.Driver
#      jpa:
#        database-platform: org.hibernate.dialect.H2Dialect
#        hibernate:
#            ddl-auto: update
#        properties:
#            hibernate:
#            show-sql: true
#            use_sql_comments: true
#            format_sql: true
#      h2:
#        console:
#          enabled: true
#          path: /console
#
#      security:
#           oauth2:
#              client:
#                registration:
#                 google:
#                   clientId: 763158131226-k4926josgdecm7o6gcfscbq5v8vib65e.apps.googleusercontent.com
#                   clientSecret: vyz-gahvlomwSJGDHizQdHlY
#                   redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#                   scope:
#                     - email
#                     - profile
#                 facebook:
#                  clientId: 1038423279912140
#                  clientSecret: 37100a38fca41027583d8f3f467e5671
#                  redirectUri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
#                  scope:
#                   - email
#                   - public_profile
#                 provider:
#              facebook:
#                      authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
#                      tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
#                      userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
#              twilio:
#                      account_sid: ACb96920cfbc5c77126897653119bb3c51
#                      auth_token: 24c531dce6a771c254df9ce288a09009
#                      trail_number: +12058503590
#app:
#    auth:
#      tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
#      tokenExpirationMsec: 864000000
#    oauth2:
#    # After successfully authenticating with the OAuth2 Provider,
#    # we'll be generating an auth token for the user and sending the token to the
#    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
#    # We're not using cookies because they won't work well in mobile clients.
#      authorizedRedirectUris:
#      - http://localhost:3000/oauth2/redirect
#      - myandroidapp://oauth2/redirect
#      - myiosapp://oauth2/redirect
